 check.warn(importable)
      C:\Users\tmcha\AppData\Local\Temp\pip-build-env-03kwhlp4\overlay\Lib\site-packages\setuptools\command\build_py.py:212: _Warning: Package 'asyncpg.protocol.record' is absent from the `packages` configuration.
      !!

              ********************************************************************************
              ############################
              # Package would be ignored #
              ############################
              Python recognizes 'asyncpg.protocol.record' as an importable package[^1],
              but it is absent from setuptools' `packages` configuration.

              This leads to an ambiguous overall configuration. If you want to distribute this
              package, please make sure that 'asyncpg.protocol.record' is explicitly added
              to the `packages` configuration field.

              Alternatively, you can also rely on setuptools' discovery methods
              (for example by using `find_namespace_packages(...)`/`find_namespace:`
              instead of `find_packages(...)`/`find:`).

              You can read more about "package discovery" on setuptools documentation page:

              - https://setuptools.pypa.io/en/latest/userguide/package_discovery.html

              If you don't want 'asyncpg.protocol.record' to be distributed and are
              already explicitly excluding 'asyncpg.protocol.record' via
              `find_namespace_packages(...)/find_namespace` or `find_packages(...)/find`,
              you can try to use `exclude_package_data`, or `include-package-data=False` in
              combination with a more fine grained `package-data` configuration.

              You can read more about "package data files" on setuptools documentation page:

              - https://setuptools.pypa.io/en/latest/userguide/datafiles.html


              [^1]: For Python, any directory (with suitable naming) can be imported,
                    even if it does not contain any `.py` files.
                    On the other hand, currently there is no concept of package data
                    directory, all directories are treated like packages.
              ********************************************************************************

      !!
        check.warn(importable)
      copying asyncpg\pgproto\__init__.pxd -> build\lib.win-amd64-cpython-313\asyncpg\pgproto
      copying asyncpg\pgproto\buffer.pxd -> build\lib.win-amd64-cpython-313\asyncpg\pgproto
      copying asyncpg\pgproto\buffer.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto
      copying asyncpg\pgproto\consts.pxi -> build\lib.win-amd64-cpython-313\asyncpg\pgproto
      copying asyncpg\pgproto\cpythonx.pxd -> build\lib.win-amd64-cpython-313\asyncpg\pgproto
      copying asyncpg\pgproto\debug.pxd -> build\lib.win-amd64-cpython-313\asyncpg\pgproto
      copying asyncpg\pgproto\frb.pxd -> build\lib.win-amd64-cpython-313\asyncpg\pgproto
      copying asyncpg\pgproto\frb.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto
      copying asyncpg\pgproto\hton.pxd -> build\lib.win-amd64-cpython-313\asyncpg\pgproto
      copying asyncpg\pgproto\pgproto.pxd -> build\lib.win-amd64-cpython-313\asyncpg\pgproto
      copying asyncpg\pgproto\pgproto.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto
      copying asyncpg\pgproto\tohex.pxd -> build\lib.win-amd64-cpython-313\asyncpg\pgproto
      copying asyncpg\pgproto\uuid.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto
      copying asyncpg\protocol\consts.pxi -> build\lib.win-amd64-cpython-313\asyncpg\protocol
      copying asyncpg\protocol\coreproto.pxd -> build\lib.win-amd64-cpython-313\asyncpg\protocol
      copying asyncpg\protocol\coreproto.pyx -> build\lib.win-amd64-cpython-313\asyncpg\protocol
      copying asyncpg\protocol\cpythonx.pxd -> build\lib.win-amd64-cpython-313\asyncpg\protocol
      copying asyncpg\protocol\encodings.pyx -> build\lib.win-amd64-cpython-313\asyncpg\protocol
      copying asyncpg\protocol\pgtypes.pxi -> build\lib.win-amd64-cpython-313\asyncpg\protocol
      copying asyncpg\protocol\prepared_stmt.pxd -> build\lib.win-amd64-cpython-313\asyncpg\protocol
      copying asyncpg\protocol\prepared_stmt.pyx -> build\lib.win-amd64-cpython-313\asyncpg\protocol
      copying asyncpg\protocol\protocol.pxd -> build\lib.win-amd64-cpython-313\asyncpg\protocol
      copying asyncpg\protocol\protocol.pyx -> build\lib.win-amd64-cpython-313\asyncpg\protocol
      copying asyncpg\protocol\scram.pxd -> build\lib.win-amd64-cpython-313\asyncpg\protocol
      copying asyncpg\protocol\scram.pyx -> build\lib.win-amd64-cpython-313\asyncpg\protocol
      copying asyncpg\protocol\settings.pxd -> build\lib.win-amd64-cpython-313\asyncpg\protocol
      copying asyncpg\protocol\settings.pyx -> build\lib.win-amd64-cpython-313\asyncpg\protocol
      creating build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\__init__.pxd -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\bits.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\bytea.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\context.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\datetime.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\float.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\geometry.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\hstore.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\int.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\json.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\jsonpath.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\misc.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\network.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\numeric.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\pg_snapshot.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\text.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\tid.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\pgproto\codecs\uuid.pyx -> build\lib.win-amd64-cpython-313\asyncpg\pgproto\codecs
      copying asyncpg\protocol\codecs\array.pyx -> build\lib.win-amd64-cpython-313\asyncpg\protocol\codecs
      copying asyncpg\protocol\codecs\base.pxd -> build\lib.win-amd64-cpython-313\asyncpg\protocol\codecs
      copying asyncpg\protocol\codecs\base.pyx -> build\lib.win-amd64-cpython-313\asyncpg\protocol\codecs
      copying asyncpg\protocol\codecs\pgproto.pyx -> build\lib.win-amd64-cpython-313\asyncpg\protocol\codecs
      copying asyncpg\protocol\codecs\range.pyx -> build\lib.win-amd64-cpython-313\asyncpg\protocol\codecs
      copying asyncpg\protocol\codecs\record.pyx -> build\lib.win-amd64-cpython-313\asyncpg\protocol\codecs
      copying asyncpg\protocol\codecs\textutils.pyx -> build\lib.win-amd64-cpython-313\asyncpg\protocol\codecs
      creating build\lib.win-amd64-cpython-313\asyncpg\protocol\record
      copying asyncpg\protocol\record\__init__.pxd -> build\lib.win-amd64-cpython-313\asyncpg\protocol\record
      running build_ext
      building 'asyncpg.pgproto.pgproto' extension
      error: Microsoft Visual C++ 14.0 or greater is required. Get it with "Microsoft C++ Build Tools": https://visualstudio.microsoft.com/visual-cpp-build-tools/
      [end of output]

  note: This error originates from a subprocess, and is likely not a problem with pip.
  ERROR: Failed building wheel for asyncpg
  Building wheel for psycopg2-binary (pyproject.toml) ... error
  error: subprocess-exited-with-error

  × Building wheel for psycopg2-binary (pyproject.toml) did not run successfully.
  │ exit code: 1
  ╰─> [31 lines of output]
      C:\Users\tmcha\AppData\Local\Temp\pip-build-env-clxhpe_d\overlay\Lib\site-packages\setuptools\dist.py:759: SetuptoolsDeprecationWarning: License classifiers are deprecated.
      !!

              ********************************************************************************
              Please consider removing the following classifiers in favor of a SPDX license expression:

              License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)

              See https://packaging.python.org/en/latest/guides/writing-pyproject-toml/#license for details.
              ********************************************************************************

      !!
        self._finalize_license_expression()
      running bdist_wheel
      running build
      running build_py
      creating build\lib.win-amd64-cpython-313\psycopg2
      copying lib\errorcodes.py -> build\lib.win-amd64-cpython-313\psycopg2
      copying lib\errors.py -> build\lib.win-amd64-cpython-313\psycopg2
      copying lib\extensions.py -> build\lib.win-amd64-cpython-313\psycopg2
      copying lib\extras.py -> build\lib.win-amd64-cpython-313\psycopg2
      copying lib\pool.py -> build\lib.win-amd64-cpython-313\psycopg2
      copying lib\sql.py -> build\lib.win-amd64-cpython-313\psycopg2
      copying lib\tz.py -> build\lib.win-amd64-cpython-313\psycopg2
      copying lib\_ipaddress.py -> build\lib.win-amd64-cpython-313\psycopg2
      copying lib\_json.py -> build\lib.win-amd64-cpython-313\psycopg2
      copying lib\_range.py -> build\lib.win-amd64-cpython-313\psycopg2
      copying lib\__init__.py -> build\lib.win-amd64-cpython-313\psycopg2
      running build_ext
      building 'psycopg2._psycopg' extension
      error: Microsoft Visual C++ 14.0 or greater is required. Get it with "Microsoft C++ Build Tools": https://visualstudio.microsoft.com/visual-cpp-build-tools/
      [end of output]

  note: This error originates from a subprocess, and is likely not a problem with pip.
  ERROR: Failed building wheel for psycopg2-binary
Failed to build asyncpg psycopg2-binary
ERROR: Failed to build installable wheels for some pyproject.toml based projects (asyncpg, psycopg2-binary)
PS C:\Users\tmcha\Dev\prevostgo> railway run python backend/migrate_to_postgres.py
Traceback (most recent call last):
  File "C:\Users\tmcha\Dev\prevostgo\backend\migrate_to_postgres.py", line 6, in <module>
    import psycopg2
ModuleNotFoundError: No module named 'psycopg2'
PS C:\Users\tmcha\Dev\prevostgo>